function initModel2() {
  return [
    // torso
    0, 200, 20,
    173.21, -100, 20,
    -173.21, -100, 20,

    0, 200, -20,
    173.21, -100, -20,
    -173.21, -100, -20,

    0, 200, 20,
    0, 200, -20,
    173.21, -100, -20,
    173.21, -100, -20,
    173.21, -100, 20,
    0, 200, 20,

    0, 200, 20,
    0, 200, -20,
    -173.21, -100, 20,
    -173.21, -100, 20,
    -173.21, -100, -20,
    0, 200, -20,

    -173.21, -100, 20,
    -173.21, -100, -20,
    173.21, -100, 20,
    173.21, -100, 20,
    173.21, -100, -20,
    -173.21, -100, -20,

    // arm1
    -172.67, -7.07, -37.4,
    -172.67, 7.07, -37.4,
    -87.76, -7.07, 47.4,
    -172.67, 7.07, -37.4,
    -87.76, -7.07, 47.4,
    -87.76, 7.07, 47.4,

    -172.67, 7.07, -37.4,
    -162.68, 7.07, -47.4,
    -87.76, 7.07, 47.4,
    -162.68, 7.07, -47.4,
    -87.76, 7.07, 47.4,
    -77.76, 7.07, 37.4,

    -162.68, 7.07, -47.4,
    -162.68, -7.07, -47.4,
    -77.76, 7.07, 37.4,
    -162.68, -7.07, -47.4,
    -77.76, 7.07, 37.4,
    -162.68, -7.07, -37.4,

    -162.68, -7.07, -47.4,
    -172.67, -7.07, -37.4,
    -77.76, -7.07, 37.4,
    -172.67, -7.07, -37.4,
    -77.76, -7.07, 37.4,
    -87.76, -7.07, 47.4,

    -77.76, 7.07, 37.4,
    -77.76, -7.07, 37.4,
    -87.76, 7.07, 47.4,
    -77.76, -7.07, 37.4,
    -87.76, 7.07, 47.4,
    -87.76, -7.07, 47.4,

    -162.68, -7.07, -47.4,
    -162.68, 7.07, -47.4,
    -172.67, -7.07, -37.4,
    -162.68, 7.07, -47.4,
    -172.67, -7.07, -37.4,
    -172.67, 7.07, -37.4,

    // arm2
    // arm2 is the same as arm1 but mirror along the y-axis
    172.67, -7.07, -37.4,
    172.67, 7.07, -37.4,
    87.76, -7.07, 47.4,
    172.67, 7.07, -37.4,
    87.76, -7.07, 47.4,
    87.76, 7.07, 47.4,

    172.67, 7.07, -37.4,
    162.68, 7.07, -47.4,
    87.76, 7.07, 47.4,
    162.68, 7.07, -47.4,
    87.76, 7.07, 47.4,
    77.76, 7.07, 37.4,

    162.68, 7.07, -47.4,
    162.68, -7.07, -47.4,
    77.76, 7.07, 37.4,
    162.68, -7.07, -47.4,
    77.76, 7.07, 37.4,
    162.68, -7.07, -37.4,

    162.68, -7.07, -47.4,
    172.67, -7.07, -37.4,
    77.76, -7.07, 37.4,
    172.67, -7.07, -37.4,
    77.76, -7.07, 37.4,
    87.76, -7.07, 47.4,

    77.76, 7.07, 37.4,
    77.76, -7.07, 37.4,
    87.76, 7.07, 47.4,
    77.76, -7.07, 37.4,
    87.76, 7.07, 47.4,
    87.76, -7.07, 47.4,

    162.68, -7.07, -47.4,
    162.68, 7.07, -47.4,
    172.67, -7.07, -37.4,
    162.68, 7.07, -47.4,
    172.67, -7.07, -37.4,
    172.67, 7.07, -37.4,

    // leg1
    // front face
    42.93, 7.07, -217.87,
    57.07, 7.07, -217.87,
    42.93, 7.07, -97.87,
    57.07, 7.07, -217.87,
    42.93, 7.07, -97.87,
    57.07, 7.07, -97.87,

    // back face is front mirrored along the x-axis
    42.93, -7.07, -217.87,
    57.07, -7.07, -217.87,
    42.93, -7.07, -97.87,
    57.07, -7.07, -217.87,
    42.93, -7.07, -97.87,
    57.07, -7.07, -97.87,

    // left face
    57.07, 7.07, -217.87,
    57.07, -7.07, -217.87,
    57.07, 7.07, -97.87,
    57.07, -7.07, -217.87,
    57.07, 7.07, -97.87,
    57.07, -7.07, -97.87,

    // right face is left mirrored along the y-axis
    42.93, 7.07, -217.87,
    42.93, -7.07, -217.87,
    42.93, 7.07, -97.87,
    42.93, -7.07, -217.87,
    42.93, 7.07, -97.87,
    42.93, -7.07, -97.87,

    // bottom face
    42.93, 7.07, -217.87,
    42.93, -7.07, -217.87,
    57.07, 7.07, -217.87,
    42.93, -7.07, -217.87,
    57.07, 7.07, -217.87,
    57.07, -7.07, -217.87,

    // top face is bottom mirrored along the z-axis
    42.93, 7.07, -97.87,
    42.93, -7.07, -97.87,
    57.07, 7.07, -97.87,
    42.93, -7.07, -97.87,
    57.07, 7.07, -97.87,
    57.07, -7.07, -97.87,

    // leg2
    // leg2 is the same as leg1 but mirror along the y-axis
    // front face
    42.93, 7.07, -97.87,
    57.07, 7.07, -97.87,
    42.93, 7.07, -217.87,
    57.07, 7.07, -97.87,
    42.93, 7.07, -217.87,
    57.07, 7.07, -217.87,

    // back face is front mirrored along the x-axis
    42.93, -7.07, -97.87,
    57.07, -7.07, -97.87,
    42.93, -7.07, -217.87,
    57.07, -7.07, -97.87,
    42.93, -7.07, -217.87,
    57.07, -7.07, -217.87,

    // left face
    57.07, 7.07, -97.87,
    57.07, -7.07, -97.87,
    57.07, 7.07, -217.87,
    57.07, -7.07, -97.87,
    57.07, 7.07, -217.87,
    57.07, -7.07, -217.87,

    // right face is left mirrored along the y-axis
    42.93, 7.07, -97.87,
    42.93, -7.07, -97.87,
    42.93, 7.07, -217.87,
    42.93, -7.07, -97.87,
    42.93, 7.07, -217.87,
    42.93, -7.07, -217.87,

    // bottom face
    42.93, 7.07, -97.87,
    42.93, -7.07, -97.87,
    57.07, 7.07, -97.87,
    42.93, -7.07, -97.87,
    57.07, 7.07, -97.87,
    57.07, -7.07, -97.87,

    // top face is bottom mirrored along the z-axis
    42.93, 7.07, -217.87,
    42.93, -7.07, -217.87,
    57.07, 7.07, -217.87,
    42.93, -7.07, -217.87,
    57.07, 7.07, -217.87,
    57.07, -7.07, -217.87,
  ];
}

function initColorModel2() {
  return [
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,

    255, 255, 0,
    255, 255, 0,
    255, 255, 0,

    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,

    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,

    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,
    255, 255, 0,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,

    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
    64, 64, 64,
  ];
}

function getTextureModel2() {
  return "scripts/models/bricks.jpg";
}

function loadModel2Texture(url) {
  const textureImg = gl.createTexture();
  gl.bindTexture(gl.TEXTURE_2D, textureImg);
  const level = 0;
  const internalFormat = gl.RGBA;
  const width = 1;
  const height = 1;
  const border = 0;
  const format = gl.RGBA;
  const type = gl.UNSIGNED_BYTE;
  const pixel = new Uint8Array([0, 0, 255, 255]);
  gl.texImage2D(
    gl.TEXTURE_2D,
    level,
    internalFormat,
    width,
    height,
    border,
    format,
    type,
    pixel
  );
  const image = new Image();
  requestCORSIfNotSameOrigin(image, url);
  image.addEventListener("load", function () {
    gl.bindTexture(gl.TEXTURE_2D, textureImg);
    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, image);
    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {
      gl.generateMipmap(gl.TEXTURE_2D);
    } else {
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
    }
  });
  image.src = url;
  return texture;
}
